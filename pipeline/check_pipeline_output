#!/usr/bin/env bash

if [ $# -eq 0 ]; then
    echo "---"
    echo " Descr: Performs some checks on certain output files and prints all to screen"
    echo " Usage: `basename $0` /path/to/pipeline/output/dir/"
    echo "        `basename $0` /path1 /path2"
    echo "---"
    exit 1
fi

RUN_DIR_PATHS=( "$@" )
TITLE_STRING='[INFO]'

echo ""

for runDir in "${RUN_DIR_PATHS[@]}"; do
  echo "------------------"
  echo " Checking Rundir path: $runDir"
  echo "------------------"
  if [ ! -d $runDir ]; then
    echo "[ERROR] Rundir does not exist ($runDir)"
    exit 1;
  fi
  
  ## define paths / files
  runName=`basename $runDir`
  readmeFile=$runDir/README
  qcstatsDir=$runDir/QCStats/
  wgsmetricsFile=$qcstatsDir/WGSMetrics_summary.txt
  logsDir=$runDir/logs
  checkFile=$logsDir/PipelineCheck.log
  kinshipFile=`find $runDir -maxdepth 1 -mindepth 1 -type f -iname "*.kinship"`
  somaticsDir=$runDir/somaticVariants/
  copynumberDir=$runDir/copyNumber/

  echo "$TITLE_STRING DirsizeCheck"
  DIRSIZE=`du -sh $runDir | cut -f 1`
  echo $DIRSIZE

  echo "$TITLE_STRING PipelineCheckLogCheck"
  echo "Version: `cat ${checkFile} | grep 'Pipeline version'`"
  if [[ `tail -1 ${checkFile} | grep 'pipeline completed successfully'` ]]; then echo "OK"
  else echo "[WARNING] Pipeline Error"; cat $checkFile
  fi

  echo "$TITLE_STRING CopynumberDirPresenceCheck"
  if [ -e $copynumberDir ]; then echo "OK"
  else echo "[WARNING] no copynumber dir present"
  fi  

  echo "$TITLE_STRING SomaticsDirPresenceCheck"
  if [ -e $somaticsDir ]; then echo "OK"
  else echo "[WARNING] no somatics dir present"
  fi

  echo "$TITLE_STRING SomaticsMergedCheck"
  if [ `find $somaticsDir -mindepth 2 -maxdepth 2 -wholename "*_merged_somatics.vcf" | head -1` ]; then echo "OK";
  else echo "[WARNING] No merged somatics VCF found!";
  fi

  echo "$TITLE_STRING SomaticsMeltedCheck"
  if [ `find $somaticsDir -mindepth 2 -maxdepth 2 -wholename "*_melted.vcf" | head -1` ]; then echo "OK";
  else echo "[WARNING] No melted somatics VCF found!";
  fi

  echo "$TITLE_STRING BamSliceCheck"
  if [ `find $runDir -mindepth 3 -maxdepth 3 -wholename "*/mapping/*sliced*.bam" | head -1` ]; then echo "OK";
  else echo "[WARNING] No BAM slice found!";
  fi

  echo "$TITLE_STRING VcfSliceCheck"
  if [ `find $runDir -maxdepth 1 -iname "*sliced*.vcf" | head -1` ]; then echo "OK";
  else echo "[WARNING] No VCF slice found!";
  fi
  
  ## prints coverage / duplicates etc (and sample-names)
  echo "$TITLE_STRING WGSMetricsCheck"
  if [ -e $wgsmetricsFile ]; then
    cat $wgsmetricsFile | cut -f 1,3,4,5,8,13
    #cat $wgsmetricsFile | awk -v OFS='\t' '{print $3,$5,$8,$1}'
  else echo "[WARNING] No WGSMetrics file found!";
  fi
  
  ## print readme file path if present
  echo "$TITLE_STRING KinshipCheck"
  if [[ ! $kinshipFile == '' ]]; then
    cat $kinshipFile | cut -f 2,4,6,7,8
  else echo "[WARNING] No kinship file found!";
  fi
  
  echo ""
  echo "$TITLE_STRING Various CMD for quick access"
  echo "===> CMD to copy QCStats to NAS webserver location"
  echo "rsync -ahPn --stats ${qcstatsDir} nas:/volume1/web/testwebsite/qc/pipeline/${runName}_QCStats"

  ## print readme file path if present
  if [ -e $readmeFile ]; then
    echo "===> README file found"
    echo "cat $readmeFile";
  fi

  echo ""

done
